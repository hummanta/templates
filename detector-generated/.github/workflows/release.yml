name: Build Release Binaries

on:
  push:
    tags:
      - v[0-9]+.*

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        run: rustup update stable

      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.os }}

      - name: Install Just
        uses: taiki-e/install-action@just

      - name: Install pre-requisites
        run: just install-hmt-packager

      - name: Build all crates
        run: just build release ${{ matrix.os }}

      - name: Package binaries and checksum
        run: just package release ${{ matrix.os }} ${{ github.ref_name }}

      - name: Upload package tarballs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-tarballs
          path: target/artifacts/*.tar.gz
          compression-level: 0

      - name: Upload checksums
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-checksums
          path: target/artifacts/*.sha256
          compression-level: 0

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: target/artifacts
          merge-multiple: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: target/artifacts/*.tar.gz*
          fail_on_unmatched_files: true
